{-# LANGUAGE BangPatterns, DeriveDataTypeable, DeriveGeneric, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC  -fno-warn-unused-imports #-}
module CoreNLPProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified GHC.Generics as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)

protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline\", haskellPrefix = [], parentModule = [], baseName = MName \"CoreNLPProtos\"}, protoFilePath = [\"CoreNLPProtos.hs\"], protoSource = \"CoreNLP.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Document\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Document\"}, descFilePath = [\"CoreNLPProtos\",\"Document.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.text\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"text\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.sentence\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"sentence\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Sentence\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Sentence\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.corefChain\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"corefChain\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.CorefChain\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"CorefChain\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.docID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"docID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.docDate\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"docDate\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.calendar\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"calendar\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.sentencelessToken\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"sentencelessToken\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Token\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Token\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.character\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"character\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Token\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Token\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.quote\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"quote\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Quote\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Quote\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Document.mentions\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Document\"], baseName' = FName \"mentions\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NERMention\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NERMention\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [(FieldId {getFieldId = 100},FieldId {getFieldId = 255})], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Sentence\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Sentence\"}, descFilePath = [\"CoreNLPProtos\",\"Sentence.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.token\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"token\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Token\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Token\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.tokenOffsetBegin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"tokenOffsetBegin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.tokenOffsetEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"tokenOffsetEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.sentenceIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"sentenceIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.characterOffsetBegin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"characterOffsetBegin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.characterOffsetEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"characterOffsetEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.parseTree\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"parseTree\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.ParseTree\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"ParseTree\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.binarizedParseTree\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"binarizedParseTree\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 31}, wireTag = WireTag {getWireTag = 250}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.ParseTree\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"ParseTree\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.annotatedParseTree\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"annotatedParseTree\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 32}, wireTag = WireTag {getWireTag = 258}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.ParseTree\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"ParseTree\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.sentiment\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"sentiment\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 33}, wireTag = WireTag {getWireTag = 266}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.kBestParseTrees\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"kBestParseTrees\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 34}, wireTag = WireTag {getWireTag = 274}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.ParseTree\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"ParseTree\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.basicDependencies\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"basicDependencies\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"DependencyGraph\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.collapsedDependencies\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"collapsedDependencies\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"DependencyGraph\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.collapsedCCProcessedDependencies\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"collapsedCCProcessedDependencies\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"DependencyGraph\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.alternativeDependencies\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"alternativeDependencies\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 106}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"DependencyGraph\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.openieTriple\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"openieTriple\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 114}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.RelationTriple\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"RelationTriple\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.kbpTriple\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"kbpTriple\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 130}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.RelationTriple\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"RelationTriple\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.entailedSentence\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"entailedSentence\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 122}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.SentenceFragment\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"SentenceFragment\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.entailedClause\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"entailedClause\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 35}, wireTag = WireTag {getWireTag = 282}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.SentenceFragment\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"SentenceFragment\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.enhancedDependencies\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"enhancedDependencies\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 138}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"DependencyGraph\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.enhancedPlusPlusDependencies\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"enhancedPlusPlusDependencies\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 146}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"DependencyGraph\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.character\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"character\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 154}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Token\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Token\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.paragraph\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"paragraph\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.text\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"text\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.hasRelationAnnotations\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"hasRelationAnnotations\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 51}, wireTag = WireTag {getWireTag = 408}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.entity\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"entity\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 52}, wireTag = WireTag {getWireTag = 418}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Entity\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Entity\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.relation\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"relation\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 53}, wireTag = WireTag {getWireTag = 426}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Relation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Relation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.hasNumerizedTokensAnnotation\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"hasNumerizedTokensAnnotation\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 54}, wireTag = WireTag {getWireTag = 432}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.mentions\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"mentions\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 55}, wireTag = WireTag {getWireTag = 442}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NERMention\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NERMention\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.mentionsForCoref\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"mentionsForCoref\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 56}, wireTag = WireTag {getWireTag = 450}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Mention\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Mention\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.hasCorefMentionsAnnotation\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"hasCorefMentionsAnnotation\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 57}, wireTag = WireTag {getWireTag = 456}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Sentence.sentenceID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Sentence\"], baseName' = FName \"sentenceID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 58}, wireTag = WireTag {getWireTag = 466}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [(FieldId {getFieldId = 100},FieldId {getFieldId = 255})], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Token\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Token\"}, descFilePath = [\"CoreNLPProtos\",\"Token.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.word\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"word\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.pos\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"pos\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.value\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"value\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.category\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"category\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.before\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"before\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.after\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"after\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.originalText\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"originalText\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.ner\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"ner\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.normalizedNER\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"normalizedNER\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.lemma\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"lemma\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.beginChar\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"beginChar\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.endChar\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"endChar\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 96}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.utterance\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"utterance\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 104}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.speaker\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"speaker\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 114}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.beginIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"beginIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 120}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.endIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"endIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 128}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.tokenBeginIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"tokenBeginIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 136}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.tokenEndIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"tokenEndIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 144}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.timexValue\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"timexValue\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 154}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Timex\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Timex\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.hasXmlContext\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"hasXmlContext\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 21}, wireTag = WireTag {getWireTag = 168}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.xmlContext\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"xmlContext\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 22}, wireTag = WireTag {getWireTag = 178}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.corefClusterID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"corefClusterID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 23}, wireTag = WireTag {getWireTag = 184}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.answer\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"answer\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 24}, wireTag = WireTag {getWireTag = 194}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.headWordIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"headWordIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 26}, wireTag = WireTag {getWireTag = 208}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.operator\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"operator\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 27}, wireTag = WireTag {getWireTag = 218}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Operator\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Operator\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.polarity\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"polarity\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 28}, wireTag = WireTag {getWireTag = 226}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Polarity\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Polarity\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.span\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"span\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 29}, wireTag = WireTag {getWireTag = 234}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Span\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Span\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.sentiment\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"sentiment\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 30}, wireTag = WireTag {getWireTag = 242}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.quotationIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"quotationIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 31}, wireTag = WireTag {getWireTag = 248}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.conllUFeatures\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"conllUFeatures\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 32}, wireTag = WireTag {getWireTag = 258}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.MapStringString\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"MapStringString\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.coarseTag\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"coarseTag\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 33}, wireTag = WireTag {getWireTag = 266}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.conllUTokenSpan\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"conllUTokenSpan\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 34}, wireTag = WireTag {getWireTag = 274}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Span\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Span\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.conllUMisc\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"conllUMisc\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 35}, wireTag = WireTag {getWireTag = 282}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.conllUSecondaryDeps\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"conllUSecondaryDeps\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 36}, wireTag = WireTag {getWireTag = 290}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.MapIntString\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"MapIntString\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.wikipediaEntity\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"wikipediaEntity\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 37}, wireTag = WireTag {getWireTag = 298}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.gender\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"gender\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 51}, wireTag = WireTag {getWireTag = 410}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.trueCase\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"trueCase\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 52}, wireTag = WireTag {getWireTag = 418}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.trueCaseText\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"trueCaseText\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 53}, wireTag = WireTag {getWireTag = 426}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.chineseChar\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"chineseChar\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 54}, wireTag = WireTag {getWireTag = 434}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Token.chineseSeg\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Token\"], baseName' = FName \"chineseSeg\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 55}, wireTag = WireTag {getWireTag = 442}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [(FieldId {getFieldId = 100},FieldId {getFieldId = 255})], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Quote\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Quote\"}, descFilePath = [\"CoreNLPProtos\",\"Quote.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.text\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"text\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.begin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"begin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.end\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"end\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.sentenceBegin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"sentenceBegin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.sentenceEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"sentenceEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.tokenBegin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"tokenBegin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.tokenEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"tokenEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.docid\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"docid\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Quote.index\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Quote\"], baseName' = FName \"index\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.ParseTree\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"ParseTree\"}, descFilePath = [\"CoreNLPProtos\",\"ParseTree.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.ParseTree.child\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"ParseTree\"], baseName' = FName \"child\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.ParseTree\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"ParseTree\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.ParseTree.value\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"ParseTree\"], baseName' = FName \"value\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.ParseTree.yieldBeginIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"ParseTree\"], baseName' = FName \"yieldBeginIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.ParseTree.yieldEndIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"ParseTree\"], baseName' = FName \"yieldEndIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.ParseTree.score\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"ParseTree\"], baseName' = FName \"score\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 41}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.ParseTree.sentiment\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"ParseTree\"], baseName' = FName \"sentiment\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Sentiment\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Sentiment\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"DependencyGraph\"}, descFilePath = [\"CoreNLPProtos\",\"DependencyGraph.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.node\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\"], baseName' = FName \"node\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Node\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\",MName \"DependencyGraph\"], baseName = MName \"Node\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.edge\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\"], baseName' = FName \"edge\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\",MName \"DependencyGraph\"], baseName = MName \"Edge\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.root\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\"], baseName' = FName \"root\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Just (WireTag {getWireTag = 24},WireTag {getWireTag = 26}), wireTagLength = 1, isPacked = True, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Node\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\",MName \"DependencyGraph\"], baseName = MName \"Node\"}, descFilePath = [\"CoreNLPProtos\",\"DependencyGraph\",\"Node.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Node.sentenceIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Node\"], baseName' = FName \"sentenceIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Node.index\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Node\"], baseName' = FName \"index\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Node.copyAnnotation\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Node\"], baseName' = FName \"copyAnnotation\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\",MName \"DependencyGraph\"], baseName = MName \"Edge\"}, descFilePath = [\"CoreNLPProtos\",\"DependencyGraph\",\"Edge.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge.source\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Edge\"], baseName' = FName \"source\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge.target\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Edge\"], baseName' = FName \"target\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge.dep\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Edge\"], baseName' = FName \"dep\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge.isExtra\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Edge\"], baseName' = FName \"isExtra\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge.sourceCopy\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Edge\"], baseName' = FName \"sourceCopy\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge.targetCopy\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Edge\"], baseName' = FName \"targetCopy\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.DependencyGraph.Edge.language\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"DependencyGraph\",MName \"Edge\"], baseName' = FName \"language\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Language\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Language\"}), hsRawDefault = Just \"Unknown\", hsDefault = Just (HsDef'Enum \"Unknown\")}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.CorefChain\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"CorefChain\"}, descFilePath = [\"CoreNLPProtos\",\"CorefChain.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.chainID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\"], baseName' = FName \"chainID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.mention\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\"], baseName' = FName \"mention\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\",MName \"CorefChain\"], baseName = MName \"CorefMention\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.representative\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\"], baseName' = FName \"representative\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\",MName \"CorefChain\"], baseName = MName \"CorefMention\"}, descFilePath = [\"CoreNLPProtos\",\"CorefChain\",\"CorefMention.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.mentionID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"mentionID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.mentionType\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"mentionType\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.number\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"number\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.gender\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"gender\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.animacy\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"animacy\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.beginIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"beginIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.endIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"endIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.headIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"headIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.sentenceIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"sentenceIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.CorefChain.CorefMention.position\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"CorefChain\",MName \"CorefMention\"], baseName' = FName \"position\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Mention\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Mention\"}, descFilePath = [\"CoreNLPProtos\",\"Mention.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.mentionID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"mentionID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.mentionType\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"mentionType\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.number\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"number\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.gender\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"gender\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.animacy\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"animacy\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.person\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"person\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.startIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"startIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.endIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"endIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.headIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"headIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.headString\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"headString\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.nerString\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"nerString\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.originalRef\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"originalRef\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 104}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.goldCorefClusterID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"goldCorefClusterID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 112}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.corefClusterID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"corefClusterID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 120}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.mentionNum\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"mentionNum\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 128}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.sentNum\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"sentNum\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 136}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.utter\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"utter\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 144}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.paragraph\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"paragraph\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 152}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.isSubject\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"isSubject\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 20}, wireTag = WireTag {getWireTag = 160}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.isDirectObject\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"isDirectObject\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 21}, wireTag = WireTag {getWireTag = 168}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.isIndirectObject\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"isIndirectObject\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 22}, wireTag = WireTag {getWireTag = 176}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.isPrepositionObject\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"isPrepositionObject\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 23}, wireTag = WireTag {getWireTag = 184}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.hasTwin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"hasTwin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 24}, wireTag = WireTag {getWireTag = 192}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.generic\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"generic\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 25}, wireTag = WireTag {getWireTag = 200}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.isSingleton\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"isSingleton\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 26}, wireTag = WireTag {getWireTag = 208}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.hasBasicDependency\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"hasBasicDependency\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 27}, wireTag = WireTag {getWireTag = 216}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.hasEnhancedDepenedncy\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"hasEnhancedDepenedncy\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 28}, wireTag = WireTag {getWireTag = 224}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.hasContextParseTree\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"hasContextParseTree\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 29}, wireTag = WireTag {getWireTag = 232}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.headIndexedWord\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"headIndexedWord\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 30}, wireTag = WireTag {getWireTag = 242}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.IndexedWord\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"IndexedWord\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.dependingVerb\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"dependingVerb\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 31}, wireTag = WireTag {getWireTag = 250}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.IndexedWord\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"IndexedWord\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.headWord\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"headWord\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 32}, wireTag = WireTag {getWireTag = 258}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.IndexedWord\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"IndexedWord\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.speakerInfo\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"speakerInfo\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 33}, wireTag = WireTag {getWireTag = 266}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.SpeakerInfo\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"SpeakerInfo\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.sentenceWords\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"sentenceWords\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 50}, wireTag = WireTag {getWireTag = 402}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.IndexedWord\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"IndexedWord\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.originalSpan\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"originalSpan\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 51}, wireTag = WireTag {getWireTag = 410}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.IndexedWord\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"IndexedWord\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.dependents\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"dependents\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 52}, wireTag = WireTag {getWireTag = 418}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.preprocessedTerms\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"preprocessedTerms\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 53}, wireTag = WireTag {getWireTag = 426}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.appositions\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"appositions\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 54}, wireTag = WireTag {getWireTag = 432}, packedTag = Just (WireTag {getWireTag = 432},WireTag {getWireTag = 434}), wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.predicateNominatives\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"predicateNominatives\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 55}, wireTag = WireTag {getWireTag = 440}, packedTag = Just (WireTag {getWireTag = 440},WireTag {getWireTag = 442}), wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.relativePronouns\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"relativePronouns\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 56}, wireTag = WireTag {getWireTag = 448}, packedTag = Just (WireTag {getWireTag = 448},WireTag {getWireTag = 450}), wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.listMembers\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"listMembers\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 57}, wireTag = WireTag {getWireTag = 456}, packedTag = Just (WireTag {getWireTag = 456},WireTag {getWireTag = 458}), wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Mention.belongToLists\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Mention\"], baseName' = FName \"belongToLists\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 58}, wireTag = WireTag {getWireTag = 464}, packedTag = Just (WireTag {getWireTag = 464},WireTag {getWireTag = 466}), wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.IndexedWord\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"IndexedWord\"}, descFilePath = [\"CoreNLPProtos\",\"IndexedWord.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.IndexedWord.sentenceNum\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"IndexedWord\"], baseName' = FName \"sentenceNum\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.IndexedWord.tokenIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"IndexedWord\"], baseName' = FName \"tokenIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.IndexedWord.docID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"IndexedWord\"], baseName' = FName \"docID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.IndexedWord.copyCount\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"IndexedWord\"], baseName' = FName \"copyCount\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.SpeakerInfo\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"SpeakerInfo\"}, descFilePath = [\"CoreNLPProtos\",\"SpeakerInfo.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.SpeakerInfo.speakerName\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"SpeakerInfo\"], baseName' = FName \"speakerName\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.SpeakerInfo.mentions\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"SpeakerInfo\"], baseName' = FName \"mentions\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Just (WireTag {getWireTag = 16},WireTag {getWireTag = 18}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Span\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Span\"}, descFilePath = [\"CoreNLPProtos\",\"Span.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Span.begin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Span\"], baseName' = FName \"begin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Span.end\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Span\"], baseName' = FName \"end\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Timex\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Timex\"}, descFilePath = [\"CoreNLPProtos\",\"Timex.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Timex.value\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Timex\"], baseName' = FName \"value\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Timex.altValue\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Timex\"], baseName' = FName \"altValue\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Timex.text\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Timex\"], baseName' = FName \"text\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Timex.type\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Timex\"], baseName' = FName \"type'\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Timex.tid\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Timex\"], baseName' = FName \"tid\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Timex.beginPoint\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Timex\"], baseName' = FName \"beginPoint\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Timex.endPoint\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Timex\"], baseName' = FName \"endPoint\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Entity\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Entity\"}, descFilePath = [\"CoreNLPProtos\",\"Entity.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.headStart\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"headStart\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.headEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"headEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.mentionType\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"mentionType\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.normalizedName\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"normalizedName\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.headTokenIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"headTokenIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.corefID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"corefID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.objectID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"objectID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.extentStart\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"extentStart\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.extentEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"extentEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.type\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"type'\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Entity.subtype\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Entity\"], baseName' = FName \"subtype\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Relation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Relation\"}, descFilePath = [\"CoreNLPProtos\",\"Relation.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Relation.argName\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Relation\"], baseName' = FName \"argName\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Relation.arg\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Relation\"], baseName' = FName \"arg\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Entity\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Entity\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Relation.signature\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Relation\"], baseName' = FName \"signature\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Relation.objectID\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Relation\"], baseName' = FName \"objectID\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Relation.extentStart\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Relation\"], baseName' = FName \"extentStart\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Relation.extentEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Relation\"], baseName' = FName \"extentEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Relation.type\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Relation\"], baseName' = FName \"type'\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Relation.subtype\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Relation\"], baseName' = FName \"subtype\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Operator\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Operator\"}, descFilePath = [\"CoreNLPProtos\",\"Operator.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Operator.name\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Operator\"], baseName' = FName \"name\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Operator.quantifierSpanBegin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Operator\"], baseName' = FName \"quantifierSpanBegin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Operator.quantifierSpanEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Operator\"], baseName' = FName \"quantifierSpanEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Operator.subjectSpanBegin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Operator\"], baseName' = FName \"subjectSpanBegin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Operator.subjectSpanEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Operator\"], baseName' = FName \"subjectSpanEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Operator.objectSpanBegin\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Operator\"], baseName' = FName \"objectSpanBegin\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Operator.objectSpanEnd\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Operator\"], baseName' = FName \"objectSpanEnd\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Polarity\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Polarity\"}, descFilePath = [\"CoreNLPProtos\",\"Polarity.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Polarity.projectEquivalence\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Polarity\"], baseName' = FName \"projectEquivalence\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NaturalLogicRelation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NaturalLogicRelation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Polarity.projectForwardEntailment\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Polarity\"], baseName' = FName \"projectForwardEntailment\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NaturalLogicRelation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NaturalLogicRelation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Polarity.projectReverseEntailment\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Polarity\"], baseName' = FName \"projectReverseEntailment\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NaturalLogicRelation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NaturalLogicRelation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Polarity.projectNegation\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Polarity\"], baseName' = FName \"projectNegation\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NaturalLogicRelation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NaturalLogicRelation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Polarity.projectAlternation\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Polarity\"], baseName' = FName \"projectAlternation\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NaturalLogicRelation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NaturalLogicRelation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Polarity.projectCover\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Polarity\"], baseName' = FName \"projectCover\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NaturalLogicRelation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NaturalLogicRelation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.Polarity.projectIndependence\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"Polarity\"], baseName' = FName \"projectIndependence\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NaturalLogicRelation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NaturalLogicRelation\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NERMention\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NERMention\"}, descFilePath = [\"CoreNLPProtos\",\"NERMention.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.NERMention.sentenceIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"NERMention\"], baseName' = FName \"sentenceIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.NERMention.tokenStartInSentenceInclusive\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"NERMention\"], baseName' = FName \"tokenStartInSentenceInclusive\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.NERMention.tokenEndInSentenceExclusive\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"NERMention\"], baseName' = FName \"tokenEndInSentenceExclusive\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.NERMention.ner\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"NERMention\"], baseName' = FName \"ner\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.NERMention.normalizedNER\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"NERMention\"], baseName' = FName \"normalizedNER\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.NERMention.entityType\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"NERMention\"], baseName' = FName \"entityType\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.NERMention.timex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"NERMention\"], baseName' = FName \"timex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Timex\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Timex\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.NERMention.wikipediaEntity\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"NERMention\"], baseName' = FName \"wikipediaEntity\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.SentenceFragment\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"SentenceFragment\"}, descFilePath = [\"CoreNLPProtos\",\"SentenceFragment.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.SentenceFragment.tokenIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"SentenceFragment\"], baseName' = FName \"tokenIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Just (WireTag {getWireTag = 8},WireTag {getWireTag = 10}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.SentenceFragment.root\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"SentenceFragment\"], baseName' = FName \"root\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.SentenceFragment.assumedTruth\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"SentenceFragment\"], baseName' = FName \"assumedTruth\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.SentenceFragment.score\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"SentenceFragment\"], baseName' = FName \"score\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 33}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.TokenLocation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"TokenLocation\"}, descFilePath = [\"CoreNLPProtos\",\"TokenLocation.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.TokenLocation.sentenceIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"TokenLocation\"], baseName' = FName \"sentenceIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.TokenLocation.tokenIndex\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"TokenLocation\"], baseName' = FName \"tokenIndex\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.RelationTriple\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"RelationTriple\"}, descFilePath = [\"CoreNLPProtos\",\"RelationTriple.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.subject\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"subject\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.relation\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"relation\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.object\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"object\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.confidence\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"confidence\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 33}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.subjectTokens\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"subjectTokens\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 106}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.TokenLocation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"TokenLocation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.relationTokens\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"relationTokens\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 114}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.TokenLocation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"TokenLocation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.objectTokens\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"objectTokens\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 122}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.TokenLocation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"TokenLocation\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.tree\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"tree\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.DependencyGraph\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"DependencyGraph\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.istmod\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"istmod\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.prefixBe\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"prefixBe\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.suffixBe\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"suffixBe\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.RelationTriple.suffixOf\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"RelationTriple\"], baseName' = FName \"suffixOf\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 96}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.MapStringString\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"MapStringString\"}, descFilePath = [\"CoreNLPProtos\",\"MapStringString.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.MapStringString.key\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"MapStringString\"], baseName' = FName \"key\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.MapStringString.value\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"MapStringString\"], baseName' = FName \"value\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.MapIntString\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"MapIntString\"}, descFilePath = [\"CoreNLPProtos\",\"MapIntString.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.MapIntString.key\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"MapIntString\"], baseName' = FName \"key\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Just (WireTag {getWireTag = 8},WireTag {getWireTag = 10}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".edu.stanford.nlp.pipeline.MapIntString.value\", haskellPrefix' = [], parentModule' = [MName \"CoreNLPProtos\",MName \"MapIntString\"], baseName' = FName \"value\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Language\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Language\"}, enumFilePath = [\"CoreNLPProtos\",\"Language.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"Unknown\"),(EnumCode {getEnumCode = 1},\"Any\"),(EnumCode {getEnumCode = 2},\"Arabic\"),(EnumCode {getEnumCode = 3},\"Chinese\"),(EnumCode {getEnumCode = 4},\"English\"),(EnumCode {getEnumCode = 5},\"German\"),(EnumCode {getEnumCode = 6},\"French\"),(EnumCode {getEnumCode = 7},\"Hebrew\"),(EnumCode {getEnumCode = 8},\"Spanish\"),(EnumCode {getEnumCode = 9},\"UniversalEnglish\"),(EnumCode {getEnumCode = 10},\"UniversalChinese\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.Sentiment\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"Sentiment\"}, enumFilePath = [\"CoreNLPProtos\",\"Sentiment.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"STRONG_NEGATIVE\"),(EnumCode {getEnumCode = 1},\"WEAK_NEGATIVE\"),(EnumCode {getEnumCode = 2},\"NEUTRAL\"),(EnumCode {getEnumCode = 3},\"WEAK_POSITIVE\"),(EnumCode {getEnumCode = 4},\"STRONG_POSITIVE\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".edu.stanford.nlp.pipeline.NaturalLogicRelation\", haskellPrefix = [], parentModule = [MName \"CoreNLPProtos\"], baseName = MName \"NaturalLogicRelation\"}, enumFilePath = [\"CoreNLPProtos\",\"NaturalLogicRelation.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"EQUIVALENCE\"),(EnumCode {getEnumCode = 1},\"FORWARD_ENTAILMENT\"),(EnumCode {getEnumCode = 2},\"REVERSE_ENTAILMENT\"),(EnumCode {getEnumCode = 3},\"NEGATION\"),(EnumCode {getEnumCode = 4},\"ALTERNATION\"),(EnumCode {getEnumCode = 5},\"COVER\"),(EnumCode {getEnumCode = 6},\"INDEPENDENCE\")]}], oneofs = [], knownKeyMap = fromList []}"

fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\180@\n\rCoreNLP.proto\DC2\EMedu.stanford.nlp.pipeline\"\159\ETX\n\bDocument\DC2\f\n\EOTtext\CAN\SOH \STX(\t\DC25\n\bsentence\CAN\STX \ETX(\v2#.edu.stanford.nlp.pipeline.Sentence\DC29\n\ncorefChain\CAN\ETX \ETX(\v2%.edu.stanford.nlp.pipeline.CorefChain\DC2\r\n\ENQdocID\CAN\EOT \SOH(\t\DC2\SI\n\adocDate\CAN\a \SOH(\t\DC2\DLE\n\bcalendar\CAN\b \SOH(\EOT\DC2;\n\DC1sentencelessToken\CAN\ENQ \ETX(\v2 .edu.stanford.nlp.pipeline.Token\DC23\n\tcharacter\CAN\n \ETX(\v2 .edu.stanford.nlp.pipeline.Token\DC2/\n\ENQquote\CAN\ACK \ETX(\v2 .edu.stanford.nlp.pipeline.Quote\DC27\n\bmentions\CAN\t \ETX(\v2%.edu.stanford.nlp.pipeline.NERMention*\ENQ\bd\DLE\128\STX\"\229\f\n\bSentence\DC2/\n\ENQtoken\CAN\SOH \ETX(\v2 .edu.stanford.nlp.pipeline.Token\DC2\CAN\n\DLEtokenOffsetBegin\CAN\STX \STX(\r\DC2\SYN\n\SOtokenOffsetEnd\CAN\ETX \STX(\r\DC2\NAK\n\rsentenceIndex\CAN\EOT \SOH(\r\DC2\FS\n\DC4characterOffsetBegin\CAN\ENQ \SOH(\r\DC2\SUB\n\DC2characterOffsetEnd\CAN\ACK \SOH(\r\DC27\n\tparseTree\CAN\a \SOH(\v2$.edu.stanford.nlp.pipeline.ParseTree\DC2@\n\DC2binarizedParseTree\CAN\US \SOH(\v2$.edu.stanford.nlp.pipeline.ParseTree\DC2@\n\DC2annotatedParseTree\CAN  \SOH(\v2$.edu.stanford.nlp.pipeline.ParseTree\DC2\DC1\n\tsentiment\CAN! \SOH(\t\DC2=\n\SIkBestParseTrees\CAN\" \ETX(\v2$.edu.stanford.nlp.pipeline.ParseTree\DC2E\n\DC1basicDependencies\CAN\b \SOH(\v2*.edu.stanford.nlp.pipeline.DependencyGraph\DC2I\n\NAKcollapsedDependencies\CAN\t \SOH(\v2*.edu.stanford.nlp.pipeline.DependencyGraph\DC2T\n collapsedCCProcessedDependencies\CAN\n \SOH(\v2*.edu.stanford.nlp.pipeline.DependencyGraph\DC2K\n\ETBalternativeDependencies\CAN\r \SOH(\v2*.edu.stanford.nlp.pipeline.DependencyGraph\DC2?\n\fopenieTriple\CAN\SO \ETX(\v2).edu.stanford.nlp.pipeline.RelationTriple\DC2<\n\tkbpTriple\CAN\DLE \ETX(\v2).edu.stanford.nlp.pipeline.RelationTriple\DC2E\n\DLEentailedSentence\CAN\SI \ETX(\v2+.edu.stanford.nlp.pipeline.SentenceFragment\DC2C\n\SOentailedClause\CAN# \ETX(\v2+.edu.stanford.nlp.pipeline.SentenceFragment\DC2H\n\DC4enhancedDependencies\CAN\DC1 \SOH(\v2*.edu.stanford.nlp.pipeline.DependencyGraph\DC2P\n\FSenhancedPlusPlusDependencies\CAN\DC2 \SOH(\v2*.edu.stanford.nlp.pipeline.DependencyGraph\DC23\n\tcharacter\CAN\DC3 \ETX(\v2 .edu.stanford.nlp.pipeline.Token\DC2\DC1\n\tparagraph\CAN\v \SOH(\r\DC2\f\n\EOTtext\CAN\f \SOH(\t\DC2\RS\n\SYNhasRelationAnnotations\CAN3 \SOH(\b\DC21\n\ACKentity\CAN4 \ETX(\v2!.edu.stanford.nlp.pipeline.Entity\DC25\n\brelation\CAN5 \ETX(\v2#.edu.stanford.nlp.pipeline.Relation\DC2$\n\FShasNumerizedTokensAnnotation\CAN6 \SOH(\b\DC27\n\bmentions\CAN7 \ETX(\v2%.edu.stanford.nlp.pipeline.NERMention\DC2<\n\DLEmentionsForCoref\CAN8 \ETX(\v2\".edu.stanford.nlp.pipeline.Mention\DC2\"\n\SUBhasCorefMentionsAnnotation\CAN9 \SOH(\b\DC2\DC2\n\nsentenceID\CAN: \SOH(\t*\ENQ\bd\DLE\128\STX\"\157\b\n\ENQToken\DC2\f\n\EOTword\CAN\SOH \SOH(\t\DC2\v\n\ETXpos\CAN\STX \SOH(\t\DC2\r\n\ENQvalue\CAN\ETX \SOH(\t\DC2\DLE\n\bcategory\CAN\EOT \SOH(\t\DC2\SO\n\ACKbefore\CAN\ENQ \SOH(\t\DC2\r\n\ENQafter\CAN\ACK \SOH(\t\DC2\DC4\n\foriginalText\CAN\a \SOH(\t\DC2\v\n\ETXner\CAN\b \SOH(\t\DC2\NAK\n\rnormalizedNER\CAN\t \SOH(\t\DC2\r\n\ENQlemma\CAN\n \SOH(\t\DC2\DC1\n\tbeginChar\CAN\v \SOH(\r\DC2\SI\n\aendChar\CAN\f \SOH(\r\DC2\DC1\n\tutterance\CAN\r \SOH(\r\DC2\SI\n\aspeaker\CAN\SO \SOH(\t\DC2\DC2\n\nbeginIndex\CAN\SI \SOH(\r\DC2\DLE\n\bendIndex\CAN\DLE \SOH(\r\DC2\ETB\n\SItokenBeginIndex\CAN\DC1 \SOH(\r\DC2\NAK\n\rtokenEndIndex\CAN\DC2 \SOH(\r\DC24\n\ntimexValue\CAN\DC3 \SOH(\v2 .edu.stanford.nlp.pipeline.Timex\DC2\NAK\n\rhasXmlContext\CAN\NAK \SOH(\b\DC2\DC2\n\nxmlContext\CAN\SYN \ETX(\t\DC2\SYN\n\SOcorefClusterID\CAN\ETB \SOH(\r\DC2\SO\n\ACKanswer\CAN\CAN \SOH(\t\DC2\NAK\n\rheadWordIndex\CAN\SUB \SOH(\r\DC25\n\boperator\CAN\ESC \SOH(\v2#.edu.stanford.nlp.pipeline.Operator\DC25\n\bpolarity\CAN\FS \SOH(\v2#.edu.stanford.nlp.pipeline.Polarity\DC2-\n\EOTspan\CAN\GS \SOH(\v2\US.edu.stanford.nlp.pipeline.Span\DC2\DC1\n\tsentiment\CAN\RS \SOH(\t\DC2\SYN\n\SOquotationIndex\CAN\US \SOH(\ENQ\DC2B\n\SOconllUFeatures\CAN  \SOH(\v2*.edu.stanford.nlp.pipeline.MapStringString\DC2\DC1\n\tcoarseTag\CAN! \SOH(\t\DC28\n\SIconllUTokenSpan\CAN\" \SOH(\v2\US.edu.stanford.nlp.pipeline.Span\DC2\DC2\n\nconllUMisc\CAN# \SOH(\t\DC2D\n\DC3conllUSecondaryDeps\CAN$ \SOH(\v2'.edu.stanford.nlp.pipeline.MapIntString\DC2\ETB\n\SIwikipediaEntity\CAN% \SOH(\t\DC2\SO\n\ACKgender\CAN3 \SOH(\t\DC2\DLE\n\btrueCase\CAN4 \SOH(\t\DC2\DC4\n\ftrueCaseText\CAN5 \SOH(\t\DC2\DC3\n\vchineseChar\CAN6 \SOH(\t\DC2\DC2\n\nchineseSeg\CAN7 \SOH(\t*\ENQ\bd\DLE\128\STX\"\161\SOH\n\ENQQuote\DC2\f\n\EOTtext\CAN\SOH \SOH(\t\DC2\r\n\ENQbegin\CAN\STX \SOH(\r\DC2\v\n\ETXend\CAN\ETX \SOH(\r\DC2\NAK\n\rsentenceBegin\CAN\ENQ \SOH(\r\DC2\DC3\n\vsentenceEnd\CAN\ACK \SOH(\r\DC2\DC2\n\ntokenBegin\CAN\a \SOH(\r\DC2\DLE\n\btokenEnd\CAN\b \SOH(\r\DC2\r\n\ENQdocid\CAN\t \SOH(\t\DC2\r\n\ENQindex\CAN\n \SOH(\r\"\199\SOH\n\tParseTree\DC23\n\ENQchild\CAN\SOH \ETX(\v2$.edu.stanford.nlp.pipeline.ParseTree\DC2\r\n\ENQvalue\CAN\STX \SOH(\t\DC2\ETB\n\SIyieldBeginIndex\CAN\ETX \SOH(\r\DC2\NAK\n\ryieldEndIndex\CAN\EOT \SOH(\r\DC2\r\n\ENQscore\CAN\ENQ \SOH(\SOH\DC27\n\tsentiment\CAN\ACK \SOH(\SO2$.edu.stanford.nlp.pipeline.Sentiment\"\160\ETX\n\SIDependencyGraph\DC2=\n\EOTnode\CAN\SOH \ETX(\v2/.edu.stanford.nlp.pipeline.DependencyGraph.Node\DC2=\n\EOTedge\CAN\STX \ETX(\v2/.edu.stanford.nlp.pipeline.DependencyGraph.Edge\DC2\SUB\n\EOTroot\CAN\ETX \ETX(\rB\f\b\NUL\DLE\SOH\CAN\NUL(\NUL0\NULP\NUL\SUBD\n\EOTNode\DC2\NAK\n\rsentenceIndex\CAN\SOH \STX(\r\DC2\r\n\ENQindex\CAN\STX \STX(\r\DC2\SYN\n\SOcopyAnnotation\CAN\ETX \SOH(\r\SUB\172\SOH\n\EOTEdge\DC2\SO\n\ACKsource\CAN\SOH \STX(\r\DC2\SO\n\ACKtarget\CAN\STX \STX(\r\DC2\v\n\ETXdep\CAN\ETX \SOH(\t\DC2\SI\n\aisExtra\CAN\EOT \SOH(\b\DC2\DC2\n\nsourceCopy\CAN\ENQ \SOH(\r\DC2\DC2\n\ntargetCopy\CAN\ACK \SOH(\r\DC2>\n\blanguage\CAN\a \SOH(\SO2#.edu.stanford.nlp.pipeline.Language:\aUnknown\"\198\STX\n\nCorefChain\DC2\SI\n\achainID\CAN\SOH \STX(\ENQ\DC2C\n\amention\CAN\STX \ETX(\v22.edu.stanford.nlp.pipeline.CorefChain.CorefMention\DC2\SYN\n\SOrepresentative\CAN\ETX \STX(\r\SUB\201\SOH\n\fCorefMention\DC2\DC1\n\tmentionID\CAN\SOH \SOH(\ENQ\DC2\DC3\n\vmentionType\CAN\STX \SOH(\t\DC2\SO\n\ACKnumber\CAN\ETX \SOH(\t\DC2\SO\n\ACKgender\CAN\EOT \SOH(\t\DC2\SI\n\aanimacy\CAN\ENQ \SOH(\t\DC2\DC2\n\nbeginIndex\CAN\ACK \SOH(\r\DC2\DLE\n\bendIndex\CAN\a \SOH(\r\DC2\DC1\n\theadIndex\CAN\t \SOH(\r\DC2\NAK\n\rsentenceIndex\CAN\n \SOH(\r\DC2\DLE\n\bposition\CAN\v \SOH(\r\"\239\b\n\aMention\DC2\DC1\n\tmentionID\CAN\SOH \SOH(\ENQ\DC2\DC3\n\vmentionType\CAN\STX \SOH(\t\DC2\SO\n\ACKnumber\CAN\ETX \SOH(\t\DC2\SO\n\ACKgender\CAN\EOT \SOH(\t\DC2\SI\n\aanimacy\CAN\ENQ \SOH(\t\DC2\SO\n\ACKperson\CAN\ACK \SOH(\t\DC2\DC2\n\nstartIndex\CAN\a \SOH(\r\DC2\DLE\n\bendIndex\CAN\t \SOH(\r\DC2\DC1\n\theadIndex\CAN\n \SOH(\r\DC2\DC2\n\nheadString\CAN\v \SOH(\t\DC2\DC1\n\tnerString\CAN\f \SOH(\t\DC2\DC3\n\voriginalRef\CAN\r \SOH(\r\DC2\SUB\n\DC2goldCorefClusterID\CAN\SO \SOH(\ENQ\DC2\SYN\n\SOcorefClusterID\CAN\SI \SOH(\ENQ\DC2\DC2\n\nmentionNum\CAN\DLE \SOH(\r\DC2\SI\n\asentNum\CAN\DC1 \SOH(\r\DC2\r\n\ENQutter\CAN\DC2 \SOH(\r\DC2\DC1\n\tparagraph\CAN\DC3 \SOH(\r\DC2\DC1\n\tisSubject\CAN\DC4 \SOH(\b\DC2\SYN\n\SOisDirectObject\CAN\NAK \SOH(\b\DC2\CAN\n\DLEisIndirectObject\CAN\SYN \SOH(\b\DC2\ESC\n\DC3isPrepositionObject\CAN\ETB \SOH(\b\DC2\SI\n\ahasTwin\CAN\CAN \SOH(\b\DC2\SI\n\ageneric\CAN\EM \SOH(\b\DC2\DC3\n\visSingleton\CAN\SUB \SOH(\b\DC2\SUB\n\DC2hasBasicDependency\CAN\ESC \SOH(\b\DC2\GS\n\NAKhasEnhancedDepenedncy\CAN\FS \SOH(\b\DC2\ESC\n\DC3hasContextParseTree\CAN\GS \SOH(\b\DC2?\n\SIheadIndexedWord\CAN\RS \SOH(\v2&.edu.stanford.nlp.pipeline.IndexedWord\DC2=\n\rdependingVerb\CAN\US \SOH(\v2&.edu.stanford.nlp.pipeline.IndexedWord\DC28\n\bheadWord\CAN  \SOH(\v2&.edu.stanford.nlp.pipeline.IndexedWord\DC2;\n\vspeakerInfo\CAN! \SOH(\v2&.edu.stanford.nlp.pipeline.SpeakerInfo\DC2=\n\rsentenceWords\CAN2 \ETX(\v2&.edu.stanford.nlp.pipeline.IndexedWord\DC2<\n\foriginalSpan\CAN3 \ETX(\v2&.edu.stanford.nlp.pipeline.IndexedWord\DC2\DC2\n\ndependents\CAN4 \ETX(\t\DC2\EM\n\DC1preprocessedTerms\CAN5 \ETX(\t\DC2\DC3\n\vappositions\CAN6 \ETX(\ENQ\DC2\FS\n\DC4predicateNominatives\CAN7 \ETX(\ENQ\DC2\CAN\n\DLErelativePronouns\CAN8 \ETX(\ENQ\DC2\DC3\n\vlistMembers\CAN9 \ETX(\ENQ\DC2\NAK\n\rbelongToLists\CAN: \ETX(\ENQ\"X\n\vIndexedWord\DC2\DC3\n\vsentenceNum\CAN\SOH \SOH(\r\DC2\DC2\n\ntokenIndex\CAN\STX \SOH(\r\DC2\r\n\ENQdocID\CAN\ETX \SOH(\r\DC2\DC1\n\tcopyCount\CAN\EOT \SOH(\r\"4\n\vSpeakerInfo\DC2\DC3\n\vspeakerName\CAN\SOH \SOH(\t\DC2\DLE\n\bmentions\CAN\STX \ETX(\ENQ\"\"\n\EOTSpan\DC2\r\n\ENQbegin\CAN\SOH \STX(\r\DC2\v\n\ETXend\CAN\STX \STX(\r\"w\n\ENQTimex\DC2\r\n\ENQvalue\CAN\SOH \SOH(\t\DC2\DLE\n\baltValue\CAN\STX \SOH(\t\DC2\f\n\EOTtext\CAN\ETX \SOH(\t\DC2\f\n\EOTtype\CAN\EOT \SOH(\t\DC2\v\n\ETXtid\CAN\ENQ \SOH(\t\DC2\DC2\n\nbeginPoint\CAN\ACK \SOH(\r\DC2\DLE\n\bendPoint\CAN\a \SOH(\r\"\219\SOH\n\ACKEntity\DC2\DC1\n\theadStart\CAN\ACK \SOH(\r\DC2\SI\n\aheadEnd\CAN\a \SOH(\r\DC2\DC3\n\vmentionType\CAN\b \SOH(\t\DC2\SYN\n\SOnormalizedName\CAN\t \SOH(\t\DC2\SYN\n\SOheadTokenIndex\CAN\n \SOH(\r\DC2\SI\n\acorefID\CAN\v \SOH(\t\DC2\DLE\n\bobjectID\CAN\SOH \SOH(\t\DC2\DC3\n\vextentStart\CAN\STX \SOH(\r\DC2\DC1\n\textentEnd\CAN\ETX \SOH(\r\DC2\f\n\EOTtype\CAN\EOT \SOH(\t\DC2\SI\n\asubtype\CAN\ENQ \SOH(\t\"\183\SOH\n\bRelation\DC2\SI\n\aargName\CAN\ACK \ETX(\t\DC2.\n\ETXarg\CAN\a \ETX(\v2!.edu.stanford.nlp.pipeline.Entity\DC2\DC1\n\tsignature\CAN\b \SOH(\t\DC2\DLE\n\bobjectID\CAN\SOH \SOH(\t\DC2\DC3\n\vextentStart\CAN\STX \SOH(\r\DC2\DC1\n\textentEnd\CAN\ETX \SOH(\r\DC2\f\n\EOTtype\CAN\EOT \SOH(\t\DC2\SI\n\asubtype\CAN\ENQ \SOH(\t\"\178\SOH\n\bOperator\DC2\f\n\EOTname\CAN\SOH \STX(\t\DC2\ESC\n\DC3quantifierSpanBegin\CAN\STX \STX(\ENQ\DC2\EM\n\DC1quantifierSpanEnd\CAN\ETX \STX(\ENQ\DC2\CAN\n\DLEsubjectSpanBegin\CAN\EOT \STX(\ENQ\DC2\SYN\n\SOsubjectSpanEnd\CAN\ENQ \STX(\ENQ\DC2\ETB\n\SIobjectSpanBegin\CAN\ACK \STX(\ENQ\DC2\NAK\n\robjectSpanEnd\CAN\a \STX(\ENQ\"\169\EOT\n\bPolarity\DC2K\n\DC2projectEquivalence\CAN\SOH \STX(\SO2/.edu.stanford.nlp.pipeline.NaturalLogicRelation\DC2Q\n\CANprojectForwardEntailment\CAN\STX \STX(\SO2/.edu.stanford.nlp.pipeline.NaturalLogicRelation\DC2Q\n\CANprojectReverseEntailment\CAN\ETX \STX(\SO2/.edu.stanford.nlp.pipeline.NaturalLogicRelation\DC2H\n\SIprojectNegation\CAN\EOT \STX(\SO2/.edu.stanford.nlp.pipeline.NaturalLogicRelation\DC2K\n\DC2projectAlternation\CAN\ENQ \STX(\SO2/.edu.stanford.nlp.pipeline.NaturalLogicRelation\DC2E\n\fprojectCover\CAN\ACK \STX(\SO2/.edu.stanford.nlp.pipeline.NaturalLogicRelation\DC2L\n\DC3projectIndependence\CAN\a \STX(\SO2/.edu.stanford.nlp.pipeline.NaturalLogicRelation\"\241\SOH\n\nNERMention\DC2\NAK\n\rsentenceIndex\CAN\SOH \SOH(\r\DC2%\n\GStokenStartInSentenceInclusive\CAN\STX \STX(\r\DC2#\n\ESCtokenEndInSentenceExclusive\CAN\ETX \STX(\r\DC2\v\n\ETXner\CAN\EOT \STX(\t\DC2\NAK\n\rnormalizedNER\CAN\ENQ \SOH(\t\DC2\DC2\n\nentityType\CAN\ACK \SOH(\t\DC2/\n\ENQtimex\CAN\a \SOH(\v2 .edu.stanford.nlp.pipeline.Timex\DC2\ETB\n\SIwikipediaEntity\CAN\b \SOH(\t\"Y\n\DLESentenceFragment\DC2\DC2\n\ntokenIndex\CAN\SOH \ETX(\r\DC2\f\n\EOTroot\CAN\STX \SOH(\r\DC2\DC4\n\fassumedTruth\CAN\ETX \SOH(\b\DC2\r\n\ENQscore\CAN\EOT \SOH(\SOH\":\n\rTokenLocation\DC2\NAK\n\rsentenceIndex\CAN\SOH \SOH(\r\DC2\DC2\n\ntokenIndex\CAN\STX \SOH(\r\"\154\ETX\n\SORelationTriple\DC2\SI\n\asubject\CAN\SOH \SOH(\t\DC2\DLE\n\brelation\CAN\STX \SOH(\t\DC2\SO\n\ACKobject\CAN\ETX \SOH(\t\DC2\DC2\n\nconfidence\CAN\EOT \SOH(\SOH\DC2?\n\rsubjectTokens\CAN\r \ETX(\v2(.edu.stanford.nlp.pipeline.TokenLocation\DC2@\n\SOrelationTokens\CAN\SO \ETX(\v2(.edu.stanford.nlp.pipeline.TokenLocation\DC2>\n\fobjectTokens\CAN\SI \ETX(\v2(.edu.stanford.nlp.pipeline.TokenLocation\DC28\n\EOTtree\CAN\b \SOH(\v2*.edu.stanford.nlp.pipeline.DependencyGraph\DC2\SO\n\ACKistmod\CAN\t \SOH(\b\DC2\DLE\n\bprefixBe\CAN\n \SOH(\b\DC2\DLE\n\bsuffixBe\CAN\v \SOH(\b\DC2\DLE\n\bsuffixOf\CAN\f \SOH(\b\"-\n\SIMapStringString\DC2\v\n\ETXkey\CAN\SOH \ETX(\t\DC2\r\n\ENQvalue\CAN\STX \ETX(\t\"*\n\fMapIntString\DC2\v\n\ETXkey\CAN\SOH \ETX(\r\DC2\r\n\ENQvalue\CAN\STX \ETX(\t*\163\SOH\n\bLanguage\DC2\v\n\aUnknown\DLE\NUL\DC2\a\n\ETXAny\DLE\SOH\DC2\n\n\ACKArabic\DLE\STX\DC2\v\n\aChinese\DLE\ETX\DC2\v\n\aEnglish\DLE\EOT\DC2\n\n\ACKGerman\DLE\ENQ\DC2\n\n\ACKFrench\DLE\ACK\DC2\n\n\ACKHebrew\DLE\a\DC2\v\n\aSpanish\DLE\b\DC2\DC4\n\DLEUniversalEnglish\DLE\t\DC2\DC4\n\DLEUniversalChinese\DLE\n*h\n\tSentiment\DC2\DC3\n\SISTRONG_NEGATIVE\DLE\NUL\DC2\DC1\n\rWEAK_NEGATIVE\DLE\SOH\DC2\v\n\aNEUTRAL\DLE\STX\DC2\DC1\n\rWEAK_POSITIVE\DLE\ETX\DC2\DC3\n\SISTRONG_POSITIVE\DLE\EOT*\147\SOH\n\DC4NaturalLogicRelation\DC2\SI\n\vEQUIVALENCE\DLE\NUL\DC2\SYN\n\DC2FORWARD_ENTAILMENT\DLE\SOH\DC2\SYN\n\DC2REVERSE_ENTAILMENT\DLE\STX\DC2\f\n\bNEGATION\DLE\ETX\DC2\SI\n\vALTERNATION\DLE\EOT\DC2\t\n\ENQCOVER\DLE\ENQ\DC2\DLE\n\fINDEPENDENCE\DLE\ACKBC\n\EMedu.stanford.nlp.pipelineB\rCoreNLPProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\NUL\184\SOH\NUL\216\SOH\NUL\248\SOH\NUL")